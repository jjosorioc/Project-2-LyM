// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/project2.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class project2 {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object A=null;
  public static Object B=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=19;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=21;
      A=$fix($opIntvlY('a','z'));
      $line=22;
      B=$fix($opIntvlY('0','9'));
      $line=23;
      Object coder=$fix(project2.createCoder());
      $line=31;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,coder));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,project2.class,"main",$line);
    }
  }
  public static ITransducer createCoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=41;
      Object sigma=$fix($opUnionY($opIntvlY('a','z'),GCollections.asSet("null")));
      $line=42;
      Object mod3=$fix(GCollections.asSet(0,1,2));
      $line=43;
      Object mod5=$fix(GCollections.asSet(0,1,2,3,4));
      $line=46;
      Object Q=$fix($opCartsY(new Object[]{sigma,sigma,sigma,mod3,mod5}));
      $line=47;
      Object estados=$fix($opUnionY(Q,GCollections.asSet("fin")));
      $line=49;
      Object \u03A3=$fix($opUnionY($opIntvlY('a','z'),GCollections.asSet(':','$')));
      $line=50;
      Object \u03A3_=$fix($opUnionY(\u03A3,GCollections.asSet('#')));
      $line=51;
      Object q_0=$fix(GCollections.asList("null","null","null",1,0));
      $line=52;
      Object F=$fix(GCollections.asSet("fin"));
      $line=54;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{estados,\u03A3,\u03A3_,q_0,F,new GMethod(project2.class,"\u03B4"),new GMethod(project2.class,"g"),new GMethod(project2.class,"h")});
      if (true) break $try;
      $line=55;
      $rethrow(new RuntimeException("The function \"createCoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,project2.class,"createCoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object \u03B4(Object state, Object input) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=60;
      $result="fin";
      if (true) break $try;
      $line=61;
      $rethrow(new RuntimeException("The function \"\u03B4(state:Object,input:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,project2.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object \u03B4(java.lang.Iterable $v1, Object input) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v2=GCollections.unmodifiableCollection($v1).iterator();
      Object sigma=$v2.next();
      Object alpha=$v2.next();
      Object anterior=$v2.next();
      Object indice=$v2.next();
      Object replacements=$v2.next();
      $line=67;
      Object nuevoReplacements=$fix(replacements);
      $line=68;
      if ($opMembrY(input,GCollections.asSet(sigma,alpha))) {
        $line=68;
        nuevoReplacements=$fix($opModulY($opAdditY(nuevoReplacements,1),5));
      }
      $line=72;
      if ($opEqualY(input,'$')) {
        $line=72;
        $result="fin";
        if (true) break $try;
      }
      else {
        $line=74;
        if ($opEqualY(input,':')) {
          $line=74;
          $result=GCollections.asList(sigma,alpha,anterior,indice,replacements);
          if (true) break $try;
        }
      }
      $line=80;
      if ($opEqualY(sigma,"null")) {
        $line=80;
        $result=GCollections.asList(input,"null","null",1,0);
        if (true) break $try;
      }
      else {
        $line=83;
        if (($opMembrY(sigma,$opIntvlY('a','z'))&&$opEqualY(alpha,"null"))) {
          $line=83;
          $result=GCollections.asList(sigma,input,"null",1,0);
          if (true) break $try;
        }
      }
      $line=88;
      if (($opEqualY(anterior,"null")&&$opEqualY(indice,"null"))) {
        $line=88;
        $result=GCollections.asList(sigma,alpha,input,$opModulY($opAdditY($opSubtrY(indice,'0'),1),3),nuevoReplacements);
        if (true) break $try;
      }
      $line=92;
      if ($opEqualY(input,'$')) {
        $line=92;
        $result="fin";
        if (true) break $try;
      }
      $line=95;
      $result=GCollections.asList(sigma,alpha,input,$opModulY($opAdditY($opSubtrY(indice,'0'),1),3),nuevoReplacements);
      if (true) break $try;
      $line=96;
      $rethrow(new RuntimeException("The function \"\u03B4(\u27E8sigma,alpha,anterior,indice,replacements\u27E9:java.lang.Iterable,input:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,project2.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object h(Object state, Object input) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=103;
      $result="";
      if (true) break $try;
      $line=104;
      $rethrow(new RuntimeException("The function \"h(state:Object,input:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,project2.class,"h",$line);
    }
    return $result;
  }
  public static Object h(java.lang.Iterable $v3, Object input) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v4=GCollections.unmodifiableCollection($v3).iterator();
      Object sigma=$v4.next();
      Object alpha=$v4.next();
      Object anterior=$v4.next();
      Object indice=$v4.next();
      Object replacements=$v4.next();
      $line=109;
      if ($opEqualY(input,'$')) {
        $line=109;
        $result="";
        if (true) break $try;
      }
      else {
        $line=111;
        if ($opEqualY(input,':')) {
          $line=111;
          $result=':';
          if (true) break $try;
        }
      }
      $line=115;
      if (($opEqualY(input,sigma)&&!$opEqualY(alpha,"null"))) {
        $line=115;
        $result=alpha;
        if (true) break $try;
      }
      $line=117;
      if (($opEqualY(input,alpha)&&!$opEqualY(sigma,"null"))) {
        $line=117;
        $result=sigma;
        if (true) break $try;
      }
      $line=120;
      if ($opEqualY(input,'$')) {
        $line=120;
        $result=replacements;
        if (true) break $try;
      }
      $line=122;
      if ($opEqualY(anterior,input)) {
        $line=122;
        $result='#';
        if (true) break $try;
      }
      $line=126;
      $result=input;
      if (true) break $try;
      $line=127;
      $rethrow(new RuntimeException("The function \"h(\u27E8sigma,alpha,anterior,indice,replacements\u27E9:java.lang.Iterable,input:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,project2.class,"h",$line);
    }
    return $result;
  }
  public static Object g(Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=133;
      $result="";
      if (true) break $try;
      $line=134;
      $rethrow(new RuntimeException("The function \"g(s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,project2.class,"g",$line);
    }
    return $result;
  }
}
